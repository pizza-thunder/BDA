import math
def encrypt(key, message):
    ciphertext = [''] * key
    for column in range(key):
        index = column
        while index < len(message):
            ciphertext[column] += message[index]
            index += key
    return ''.join(ciphertext)
def decrypt(key, message):
    nrows = key
    ncols = math.ceil(len(message) / key)
    empty_positions = nrows * ncols - len(message)
    plaintext = [''] * ncols
    column = 0
    row = 0
    for symbol in message:
        plaintext[column] += symbol
        column += 1
        if column == ncols or (column == ncols - 1 and row >= nrows - empty_positions):
            column = 0
            row += 1
    return ''.join(plaintext)
message = input("Enter the message: ")
key = int(input("Enter the key: "))
ciphertext = encrypt(key, message)
print(f'Ciphertext: {ciphertext}<end>')
plaintext = decrypt(key, ciphertext)
print(f'Plaintext: {plaintext}')


#2nd way
plain_text = "Geeks for Geeks"
key = "HACK"
s = [i for i in key]
s.sort()
k1 = [s.index(i)+1 for i in key]
l = len(k1)
t = []
idx = 0
while idx<len(plain_text):
  if idx+l>len(plain_text):
    t.append(list(plain_text[idx:]))
  else:
    t.append(list(plain_text[idx:idx+l]))
  idx+=l
if len(t[-1])<l:
  for i in range(l-len(t[-1])):
    t[-1].append("_")
# print(t)
tr = [["_" for i in range(len(t))]for j in range(len(t[0]))]
for i in range(len(tr)):
  for j in range(len(tr[0])):
    tr[i][j] = t[j][i]
cipher = ""
for i in range(1,len(k1)+1):
  cipher+="".join(tr[k1.index(i)])
print(cipher)
print(t)
ans = ""
for i in t:
  ans+="".join(i)
print(ans)
